{"version":3,"sources":["../../src/routes/router.js"],"names":["bcrypt","require","jwt","controller","router","express","Router","post","signup","req","res","SeekKeep","findOne","email","body","err","user","status","send","passwordIsValid","compareSync","password","auth","token","sign","id","_id","process","env","JWT_SECRET","expiresIn","get","Book","find","then","books","json","catch","create","book","msg"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAIA,SAASC,QAAQ,UAAR,CAAb;AACA,IAAIC,MAAMD,QAAQ,cAAR,CAAV;AACA,IAAIE,aAAaF,QAAQ,2BAAR,CAAjB;AACA,IAAIG,SAASC,kBAAQC,MAAR,EAAb;;AAGA;AACAF,OAAOG,IAAP,CAAY,SAAZ,EAAuBJ,WAAWK,MAAlC;AACA;AACAJ,OAAOG,IAAP,CAAY,QAAZ,EAAsB,UAAUE,GAAV,EAAeC,GAAf,EAAoB;AACtCC,gCAASC,OAAT,CAAiB;AACbC,eAAOJ,IAAIK,IAAJ,CAASD;AADH,KAAjB,EAEG,UAAUE,GAAV,EAAeC,IAAf,EAAqB;AACpB,YAAID,GAAJ,EAAS,OAAOL,IAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,sBAArB,CAAP;AACT,YAAI,CAACF,IAAL,EAAW,OAAON,IAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,gBAArB,CAAP;AACX,YAAIC,kBAAkBnB,OAAOoB,WAAP,CAAmBX,IAAIK,IAAJ,CAASO,QAA5B,EAAsCL,KAAKK,QAA3C,CAAtB;AACA,YAAI,CAACF,eAAL,EAAsB,OAAOT,IAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC9CI,kBAAM,KADwC;AAE9CC,mBAAO;AAFuC,SAArB,CAAP;AAItB,YAAIA,QAAQrB,IAAIsB,IAAJ,CAAS;AACjBC,gBAAIT,KAAKU;AADQ,SAAT,EAETC,QAAQC,GAAR,CAAYC,UAFH,EAEe;AACvBC,uBAAW;AADY,SAFf,CAAZ;AAKApB,YAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBI,kBAAM,IADW;AAEjBC,mBAAOA;AAFU,SAArB;AAIH,KAnBD;AAoBH,CArBD;;AA0BAnB,OAAO2B,GAAP,CAAW,OAAX,EAAoB,UAACtB,GAAD,EAAMC,GAAN,EAAc;AAC9BsB,wBAAKC,IAAL,CAAU,EAAV,EACKC,IADL,CACU,UAACC,KAAD,EAAW;AACbzB,YAAIO,MAAJ,CAAW,GAAX,EAAgBmB,IAAhB,CAAqB;AACjBD;AADiB,SAArB;AAGH,KALL,EAMKE,KANL,CAMW,UAACtB,GAAD,EAAS;AACZL,YAAIO,MAAJ,CAAW,GAAX,EAAgBmB,IAAhB,CAAqB;AACjBrB;AADiB,SAArB;AAGH,KAVL;AAWH,CAZD;;AAcAX,OAAOG,IAAP,CAAY,OAAZ,EAAqB,UAACE,GAAD,EAAMC,GAAN,EAAc;AAC/BsB,wBAAKM,MAAL,CAAY7B,IAAIK,IAAhB,EACKoB,IADL,CACU,UAACK,IAAD,EAAU;AACZ7B,YAAIO,MAAJ,CAAW,GAAX,EAAgBmB,IAAhB,CAAqB;AACjBG,sBADiB;AAEjBC,iBAAK;AAFY,SAArB;AAIH,KANL,EAOKH,KAPL,CAOW,UAACtB,GAAD,EAAS;AACZL,YAAIO,MAAJ,CAAW,GAAX,EAAgBmB,IAAhB,CAAqB;AACjBrB,oBADiB;AAEjByB,iBAAK;AAFY,SAArB;AAIH,KAZL;AAaH,CAdD;;kBAgBepC,M","file":"router.js","sourcesContent":["import express from 'express';\nimport Book from '../models/bookModel';\nimport SeekKeep from '../models/seekerKeeperModel';\n\nvar bcrypt = require('bcryptjs');\nvar jwt = require('jsonwebtoken');\nvar controller = require('../controllers/controller');\nlet router = express.Router();\n\n\n//----------------------Sign Up----------------------------------------\nrouter.post('/signup', controller.signup)\n//-----------------------------Login ----------------------------------\nrouter.post('/login', function (req, res) {\n    SeekKeep.findOne({\n        email: req.body.email\n    }, function (err, user) {\n        if (err) return res.status(500).send('Error on the server.');\n        if (!user) return res.status(404).send('User not found');\n        var passwordIsValid = bcrypt.compareSync(req.body.password, user.password);\n        if (!passwordIsValid) return res.status(401).send({\n            auth: false,\n            token: null\n        });\n        var token = jwt.sign({\n            id: user._id\n        }, process.env.JWT_SECRET, {\n            expiresIn: 86400\n        });\n        res.status(200).send({\n            auth: true,\n            token: token\n        });\n    });\n});\n\n\n\n\nrouter.get('/book', (req, res) => {\n    Book.find({})\n        .then((books) => {\n            res.status(200).json({\n                books\n            });\n        })\n        .catch((err) => {\n            res.status(500).json({\n                err\n            })\n        });\n});\n\nrouter.post('/book', (req, res) => {\n    Book.create(req.body)\n        .then((book) => {\n            res.status(200).json({\n                book,\n                msg: 'successfully added book to the database'\n            });\n        })\n        .catch((err) => {\n            res.status(500).json({\n                err,\n                msg: 'Error inserting book into the database'\n            });\n        });\n});\n\nexport default router;"]}